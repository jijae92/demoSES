name: Daily Paper Watcher

on:
  # 매일 UTC 00:00 실행 (KST 09:00)
  schedule:
    - cron: "0 0 * * *"

  # 수동 트리거 지원
  workflow_dispatch:
    inputs:
      provider:
        description: 'Search provider (bing or http)'
        required: false
        default: 'http'
        type: choice
        options:
          - http
          - bing
      dry_run:
        description: 'Dry run (no email)'
        required: false
        default: false
        type: boolean
      verbose:
        description: 'Verbose logging'
        required: false
        default: false
        type: boolean

jobs:
  run-crawler:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create config.yaml from secrets
        run: |
          cat > config.yaml << EOF
          keywords:
            - "parp"
            - "isg"
            - "interferon"
            - "sting"

          provider: "${{ github.event.inputs.provider || 'http' }}"

          sources:
            - "https://www.nature.com/nature/articles"
            - "https://www.cell.com/cell/current"
            - "https://www.science.org/toc/science/current"

          min_results: 1
          dedup_window_days: 14
          timezone: "Asia/Seoul"

          email:
            from: "${{ secrets.EMAIL_FROM }}"
            to:
              - "${{ secrets.EMAIL_TO }}"
            subject_prefix: "[Daily Keyword Alerts]"
          EOF

      - name: Run Paper Watcher
        env:
          # Timezone
          TZ: Asia/Seoul

          # Bing API (optional)
          BING_API_KEY: ${{ secrets.BING_API_KEY }}

          # AWS Credentials for SES
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          # SMTP Fallback (optional)
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          # Build command with optional flags
          CMD="python bin/run-daily.py"

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            CMD="$CMD --dry-run"
          fi

          if [ "${{ github.event.inputs.verbose }}" = "true" ]; then
            CMD="$CMD --verbose"
          fi

          if [ -n "${{ github.event.inputs.provider }}" ]; then
            CMD="$CMD --provider ${{ github.event.inputs.provider }}"
          fi

          echo "Running: $CMD"
          $CMD

      - name: Upload artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            .data/seen.json
            *.log
          retention-days: 7
